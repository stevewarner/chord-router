{"version":3,"sources":["components/Chart.js","pages/PageNotFound.js","pages/ChordPage.js","components/handlers.js","pages/Home.js","components/Search.js","App.js","reportWebVitals.js","index.js"],"names":["Chart","props","chordTab","tab","PageNotFound","to","notes","ChordData","chordTypes","twelveTones","chordShapes","synth","Synth","toDestination","ChordPage","chordName","chordNote","chordQuality","chord","match","params","isValidChord","filter","note","userQuery","toLowerCase","replace","split","arr","splice","join","toUpperCase","slice","name","Object","keys","includes","shuffledNotes","i","indexOf","push","shift","className","degrees","map","degree","index","indexOfC","octave","type","onClick","console","log","triggerAttackRelease","playNote","numerals","render","Home","withRouter","useState","search","setSearch","onSubmit","e","history","preventDefault","placeholder","onChange","target","value","App","id","item","length","activeClassName","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"ywFAkGeA,EAjGD,SAACC,GAAW,IAGlBC,EAFUD,EAARE,KAEgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAExC,OACE,gCACE,kCACE,+BAEE,6BACE,+BAAuB,IAAhBD,EAAS,GAAW,SAAM,OAEnC,6BACE,+BAAuB,IAAhBA,EAAS,GAAW,SAAM,OAEnC,6BACE,+BAAuB,IAAhBA,EAAS,GAAW,SAAM,OAEnC,6BACE,+BAAuB,IAAhBA,EAAS,GAAW,SAAM,OAEnC,6BACE,+BAAuB,IAAhBA,EAAS,GAAW,SAAM,OAEnC,6BACE,+BAAuB,IAAhBA,EAAS,GAAW,SAAM,UAGrC,+BAEE,6BACE,+BAAuB,IAAhBA,EAAS,GAAW,SAAM,OAEnC,6BACE,+BAAuB,IAAhBA,EAAS,GAAW,SAAM,OAEnC,6BACE,+BAAuB,IAAhBA,EAAS,GAAW,SAAM,OAEnC,6BACE,+BAAuB,IAAhBA,EAAS,GAAW,SAAM,OAEnC,6BACE,+BAAuB,IAAhBA,EAAS,GAAW,SAAM,OAEnC,6BACE,+BAAuB,IAAhBA,EAAS,GAAW,SAAM,UAGrC,+BAEE,6BACE,+BAAuB,IAAhBA,EAAS,GAAW,SAAM,OAEnC,6BACE,+BAAuB,IAAhBA,EAAS,GAAW,SAAM,OAEnC,6BACE,+BAAuB,IAAhBA,EAAS,GAAW,SAAM,OAEnC,6BACE,+BAAuB,IAAhBA,EAAS,GAAW,SAAM,OAEnC,6BACE,+BAAuB,IAAhBA,EAAS,GAAW,SAAM,OAEnC,6BACE,+BAAuB,IAAhBA,EAAS,GAAW,SAAM,UAGrC,+BAEE,6BACE,+BAAuB,IAAhBA,EAAS,GAAW,SAAM,OAEnC,6BACE,+BAAuB,IAAhBA,EAAS,GAAW,SAAM,OAEnC,6BACE,+BAAuB,IAAhBA,EAAS,GAAW,SAAM,OAEnC,6BACE,+BAAuB,IAAhBA,EAAS,GAAW,SAAM,OAEnC,6BACE,+BAAuB,IAAhBA,EAAS,GAAW,SAAM,OAEnC,6BACE,+BAAuB,IAAhBA,EAAS,GAAW,SAAM,gB,QChF9BE,EARM,kBACnB,gCACE,qCACA,+CACA,cAAC,IAAD,CAASC,GAAG,IAAZ,8BCEIC,EAAgDC,EAAhDD,MAAOE,EAAyCD,EAAzCC,WAAYC,EAA6BF,EAA7BE,YAAaC,EAAgBH,EAAhBG,YAElCC,GAAQ,IAAIC,KAAQC,gBAwFXC,EAjFG,SAAC,GAyCjB,IArCK,IACDC,EACAC,EACAC,EALQC,EAER,EAHJC,MACEC,OAAUF,MAONG,EAAef,EAAMgB,QAAO,SAACC,GACjC,IAAMC,EAA8BN,ECzBnCO,cACAC,QAAQ,QAAS,KACjBA,QAAQ,QAAS,OACjBA,QAAQ,QAAS,OACjBA,QAAQ,aAAc,OACtBA,QAAQ,YAAa,OACrBA,QAAQ,YAAa,ODqBtB,GAA+B,MAA3BF,EAAUG,MAAM,IAAI,IAAyC,MAA3BH,EAAUG,MAAM,IAAI,GAAY,CAEpE,IAAMC,EAAMJ,EAAUG,MAAM,IAC5BX,EAAYY,EAAIC,OAAO,EAAG,GAAGC,KAAK,IAClCb,EAAeW,EAAIE,KAAK,QACnB,CAEL,IAAMF,EAAMJ,EAAUG,MAAM,IAC5BX,EAAYY,EAAIC,OAAO,EAAG,GAAGC,KAAK,IAClCb,EAAeW,EAAIE,KAAK,IAM1B,OAHAd,EAAYA,EAAU,GAAGe,cAAgBf,EAAUgB,MAAM,GACzDf,EAAeA,EAAaQ,gBAExBF,EAAKU,KAAKd,MAAMH,KACdO,EAAKU,OAASjB,GAGZkB,OAAOC,KAAK3B,GAAY4B,SAASnB,IACnCF,EAAYC,EAAYC,GACjB,QALX,MASD,GAEGoB,EAAa,YAAO5B,GAEjB6B,EAAI,EAAGA,EAAI7B,EAAY8B,QAAQvB,GAAYsB,IAClDD,EAAcG,KAAKH,EAAcI,SAOnC,OAAQpB,EAGN,qCACA,gCACA,+BACKL,EADL,IACiBR,EAAWS,GAAcgB,QAExC,cAAC,EAAD,CAAO9B,IAAKO,EAAYK,QAE1B,gCACA,6CACE,qBAAK2B,UAAU,MAAf,SACGlC,EAAWS,GAAc0B,QAAQC,KAAI,SAACC,EAAQC,GAC3CD,EAASA,GAAU,GAAKA,EAAS,GAAKA,EACtC,IAAME,EAAWV,EAAcE,QAAQ,KAEnCS,EAASD,GAAY,GAAMF,GAAUE,EAAY,EAAI,EACzD,OACF,yBAAQE,KAAK,SAASC,QAAS,kBAzExB,SAAC3B,GAAoB,IAAdyB,EAAa,uDAAN,EAC3BG,QAAQC,IAAR,UAAe7B,GAAf,OAAsByB,IACxBrC,EAAM0C,qBAAN,UAA8B9B,GAA9B,OAAqCyB,GAAU,MAuEFM,CAASjB,EAAcQ,GAASG,IAAqBN,UAAU,OAApG,UACE,4BACE,iCAASlC,EAAWS,GAAcsC,SAAST,OAE7C,4BAAIT,EAAcQ,OAJ+DC,cAlBzF,cAAC,IAAD,CAAOU,OAAQpD,KE5DJqD,EAPF,kBACX,gCACE,0CACA,0D,eCqBWC,eAlBA,SAACzD,GAAW,IAAD,EACI0D,mBAAS,IADb,mBACjBC,EADiB,KACTC,EADS,KAMxB,OACE,uBAAMC,SALS,SAACC,GAChB9D,EAAM+D,QAAQxB,KAAd,iBAA2CoB,EALRlC,QAAQ,IAAK,WAMhDqC,EAAEE,kBAGF,UACE,uBACEC,YAAY,SACZjB,KAAK,OACLkB,SAAU,SAACJ,GAAD,OAAOF,EAAUE,EAAEK,OAAOC,UAEtC,wBAAQpB,KAAK,SAAb,0BCNE3C,EAAUC,EAAVD,MAsCOgE,MApCf,WACE,OACE,eAAC,IAAD,WACE,gCACE,cAAC,IAAD,CAASC,GAAG,QAAQlE,GAAG,IAAvB,0BAGA,cAAC,EAAD,IACA,+BACGC,EAAMsC,KAAI,SAAC4B,EAAM1B,GAAP,OACY,IAArB0B,EAAKvC,KAAKwC,OACR,cAAC,IAAD,CAEEC,gBAAgB,WAChBC,OAAK,EACLtE,GAAE,iBAAYmE,EAAKI,MAJrB,SAMGJ,EAAKvC,MALDa,GAQP,WAKR,+BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO6B,OAAK,EAACC,KAAK,IAAIC,UAAWpB,IACjC,cAAC,IAAD,CAAOkB,OAAK,EAACC,KAAK,gBAAgBC,UAAW/D,IAC7C,cAAC,IAAD,CAAO0C,OAAQpD,aChCV0E,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAAS/B,OACP,cAAC,IAAMgC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3e8831b4.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\nconst Chart = (props) => {\n  const { tab } = props;\n\n  const chordTab = tab || [0, 0, 0, 0, 0, 0];\n\n  return (\n    <table>\n      <tbody>\n        <tr>\n          {/* 1st fret */}\n          <td>\n            <span>{chordTab[0] === 1 ? '●' : ''}</span>\n          </td>\n          <td>\n            <span>{chordTab[1] === 1 ? '●' : ''}</span>\n          </td>\n          <td>\n            <span>{chordTab[2] === 1 ? '●' : ''}</span>\n          </td>\n          <td>\n            <span>{chordTab[3] === 1 ? '●' : ''}</span>\n          </td>\n          <td>\n            <span>{chordTab[4] === 1 ? '●' : ''}</span>\n          </td>\n          <td>\n            <span>{chordTab[5] === 1 ? '●' : ''}</span>\n          </td>\n        </tr>\n        <tr>\n          {/* 2nd fret */}\n          <td>\n            <span>{chordTab[0] === 2 ? '●' : ''}</span>\n          </td>\n          <td>\n            <span>{chordTab[1] === 2 ? '●' : ''}</span>\n          </td>\n          <td>\n            <span>{chordTab[2] === 2 ? '●' : ''}</span>\n          </td>\n          <td>\n            <span>{chordTab[3] === 2 ? '●' : ''}</span>\n          </td>\n          <td>\n            <span>{chordTab[4] === 2 ? '●' : ''}</span>\n          </td>\n          <td>\n            <span>{chordTab[5] === 2 ? '●' : ''}</span>\n          </td>\n        </tr>\n        <tr>\n          {/* 3rd fret */}\n          <td>\n            <span>{chordTab[0] === 3 ? '●' : ''}</span>\n          </td>\n          <td>\n            <span>{chordTab[1] === 3 ? '●' : ''}</span>\n          </td>\n          <td>\n            <span>{chordTab[2] === 3 ? '●' : ''}</span>\n          </td>\n          <td>\n            <span>{chordTab[3] === 3 ? '●' : ''}</span>\n          </td>\n          <td>\n            <span>{chordTab[4] === 3 ? '●' : ''}</span>\n          </td>\n          <td>\n            <span>{chordTab[5] === 3 ? '●' : ''}</span>\n          </td>\n        </tr>\n        <tr>\n          {/* 4th fret */}\n          <td>\n            <span>{chordTab[0] === 4 ? '●' : ''}</span>\n          </td>\n          <td>\n            <span>{chordTab[1] === 4 ? '●' : ''}</span>\n          </td>\n          <td>\n            <span>{chordTab[2] === 4 ? '●' : ''}</span>\n          </td>\n          <td>\n            <span>{chordTab[3] === 4 ? '●' : ''}</span>\n          </td>\n          <td>\n            <span>{chordTab[4] === 4 ? '●' : ''}</span>\n          </td>\n          <td>\n            <span>{chordTab[5] === 4 ? '●' : ''}</span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n};\n\nexport default Chart;\n","import { NavLink } from 'react-router-dom';\n\nconst PageNotFound = () => (\n  <div>\n    <h1>404</h1>\n    <p>Page not found</p>\n    <NavLink to=\"/\">Back to Home</NavLink>\n  </div>\n);\n\nexport default PageNotFound;\n","/* eslint-disable */\nimport { Route } from 'react-router-dom';\nimport { Synth } from 'tone';\nimport Chart from '../components/Chart';\nimport { HandleSearchQuery } from '../components/handlers';\nimport ChordData from '../data.json';\nimport PageNotFound from './PageNotFound';\n\nconst { notes, chordTypes, twelveTones, chordShapes } = ChordData;\n\nconst synth = new Synth().toDestination();\n\nconst playNote = (note, octave=4) => {\n    console.log(`${note}${octave}`);\n  synth.triggerAttackRelease(`${note}${octave}`, '8n');\n};\n\nconst ChordPage = ({\n  match: {\n    params: { chord },\n  },\n}) => {\n  let chordName;\n  let chordNote;\n  let chordQuality;\n\n  const isValidChord = notes.filter((note) => {\n    const userQuery = HandleSearchQuery(chord);\n    // let chordNote, chordQuality;\n    if (userQuery.split('')[1] === '#' || userQuery.split('')[1] === 'b') {\n      // accidental # or b / remove 2 chars\n      const arr = userQuery.split('');\n      chordNote = arr.splice(0, 2).join('');\n      chordQuality = arr.join('');\n    } else {\n      // natural note / remove 1st char\n      const arr = userQuery.split('');\n      chordNote = arr.splice(0, 1).join('');\n      chordQuality = arr.join('');\n    }\n\n    chordNote = chordNote[0].toUpperCase() + chordNote.slice(1);\n    chordQuality = chordQuality.toLowerCase();\n\n    if (note.name.match(chordNote)) {\n      if (note.name === chordNote) {\n        // note matches beginning of user search\n        // next check if chordQuality matches\n        if (Object.keys(chordTypes).includes(chordQuality)) {\n          chordName = chordNote + chordQuality;\n          return true;\n        }\n      }\n    } else return false;\n  })[0];\n\n  const shuffledNotes = [...twelveTones];\n\n  for (let i = 0; i < twelveTones.indexOf(chordNote); i++) {\n    shuffledNotes.push(shuffledNotes.shift());\n  }\n  // console.log(shuffledNotes)\n\n//   console.log(chordNote)\n//   console.log(chordQuality)\n\n  return !isValidChord ? (\n    <Route render={PageNotFound} />\n  ) : (\n    <>\n    <div>\n    <h1>\n        {chordNote} {chordTypes[chordQuality].name}\n      </h1>\n      <Chart tab={chordShapes[chordName]} />\n    </div>\n    <div>\n    <p>Chord tones:</p>\n      <div className=\"row\">\n        {chordTypes[chordQuality].degrees.map((degree, index) => {\n            degree = degree >= 12 ? degree - 12 : degree \n            const indexOfC = shuffledNotes.indexOf('C')\n            // console.log(degree >=indexOfC)\n            let octave = indexOfC >= 1 && (degree >= indexOfC) ? 5 : 4\n            return (\n          <button type=\"button\" onClick={() => playNote(shuffledNotes[degree], octave)} key={index} className=\"card\">\n            <p>\n              <strong>{chordTypes[chordQuality].numerals[index]}</strong>\n            </p>\n            <p>{shuffledNotes[degree]}</p>\n          </button>\n        )})}\n      </div>\n    </div>\n    </>\n  );\n};\n\nexport default ChordPage;\n","export const HandleSearchQuery = (search) => {\n  const userQuery = search\n    .toLowerCase()\n    .replace('sharp', '#')\n    .replace('major', 'maj')\n    .replace('minor', 'min')\n    .replace('diminished', 'dim')\n    .replace('suspended', 'sus')\n    .replace('augmented', 'aug');\n\n  return userQuery;\n};\n\n// // handle search query and return Note + chordQuality\n// export const checkChordQuality = (search) => {\n//   let note;\n//   let quality;\n//   if (search.split('')[1] === '#' || search.split('')[1] === 'b') {\n//     // accidental Ab / remove 2 chars\n//     const arr = search.split('');\n//     note = arr.splice(0, 2).join('');\n//     quality = arr.join('');\n//   } else {\n//     // natural note / remove 1st char\n//     const arr = search.split('');\n//     note = arr.splice(0, 1).join('');\n//     quality = arr.join('');\n//   }\n//   console.log('note', note);\n//   console.log('quality', quality);\n// };\n\n// const isMinor = (string) => !!string.match(/minor/i) || !!string.match(/min/i);\n\n// const isMajor = (string) => !!string.match(/major/i) || !!string.match(/maj/i);\n\n// const isSus = (string) => !!string.match(/sus/i);\n\n// const isSeventh = (string) => !!string.match(/7/i);\n","const Home = () => (\n  <div>\n    <h1>Homepage</h1>\n    <p>this is the home page</p>\n  </div>\n);\n\nexport default Home;\n","/* eslint-disable react/prop-types */\nimport { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nconst searchHandler = (query) => query.replace('#', 'sharp');\n\nconst Search = (props) => {\n  const [search, setSearch] = useState('');\n  const onSubmit = (e) => {\n    props.history.push(`/chord/${searchHandler(search)}`);\n    e.preventDefault();\n  };\n  return (\n    <form onSubmit={onSubmit}>\n      <input\n        placeholder=\"Search\"\n        type=\"text\"\n        onChange={(e) => setSearch(e.target.value)}\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nexport default withRouter(Search);\n","import {\n  BrowserRouter as Router,\n  Route,\n  NavLink,\n  Switch,\n} from 'react-router-dom';\nimport ChordPage from './pages/ChordPage';\nimport PageNotFound from './pages/PageNotFound';\nimport Home from './pages/Home';\nimport ChordData from './data.json';\nimport './App.css';\nimport Search from './components/Search';\n\nconst { notes } = ChordData;\n\nfunction App() {\n  return (\n    <Router>\n      <nav>\n        <NavLink id=\"title\" to=\"/\">\n          Chord Charts\n        </NavLink>\n        <Search />\n        <span>\n          {notes.map((item, index) =>\n            item.name.length === 1 ? (\n              <NavLink\n                key={index}\n                activeClassName=\"selected\"\n                exact\n                to={`/chord/${item.path}`}\n              >\n                {item.name}\n              </NavLink>\n            ) : (\n              ''\n            )\n          )}\n        </span>\n      </nav>\n      <main>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/chord/:chord\" component={ChordPage} />\n          <Route render={PageNotFound} />\n        </Switch>\n      </main>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}